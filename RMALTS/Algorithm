fit(X,Y,T,K):
  Mopt <- min objective(M,X,Y,T,K)
  return Mopt

objective(M,X,Y,T,K):
  c = 0.01
  loss =  c*norm(M) + sum_i[ y_i - (1/K) * sum_(j in KNN(x_i,t_i,X,T,K)) [ y_j ] ]
  return loss

KNN(x_i,t_i,X,T,K):
  #find K nearest neigbhours ={x_j,t_j,y_j} of x_i such that t_i = t_j
  return
