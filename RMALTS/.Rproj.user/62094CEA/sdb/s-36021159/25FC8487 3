{
    "collab_server" : "",
    "contents" : "library(nloptr)\n\nd <- function(X_i, X_j, M) {\n A <- (X_i-X_j)*M\n A <- t(A) %*% A\n# print(A)\n return(A[1,1])\n}\n\nknn <- function(M, K, X, Tr, X_i, T_i){\n  D_i <- matrix(Inf, nrow(X),1)\n  for (j in 1:nrow(X)) {\n    if(Tr[j]==T_i) {\n      D_i[j,1] <- d(X_i,X[j,], M)\n    }\n  }\n  D_K <- sort(D_i)[K]\n\n  NN_i <- as.integer(D_i <= D_K)\n  return(NN_i)\n}\n\ndelta <- function(M,outcome,treatment,data,K){\n  Y <- data[, outcome]\n  Tr <- data[, treatment]\n  X <- data.matrix(data[, !(names(data) %in% c(outcome, treatment))])\n  l <- matrix(1,nrow(X),1)\n  for(i in 1:nrow(X)){\n    NN_i <- knn(M,K,X,Tr,X[i,],Tr[i])\n    Y_i_hat <- (t(NN_i)%*%Y)/K\n    l[i,1] <- (Y[i] - Y_i_hat)^2\n  }\n#  print(l)\n  return(sum(l))\n}\n\n#only for continuous variables\n objective <- function(M, outcome, treatment, data, K) {\n  c <-0\n  cons1 <- 1e+25 * sum(as.integer(M < 0))\n  loss <- c*norm(M,\"2\") + delta(M,outcome,treatment,data,K) + cons1\n  #print(M)\n  return(loss)\n }\n\nhin <- function(M){\n  h <- min(M)\n  return(h)\n}\n\nfit<- function(outcome, treatment, data, K) {\n  p <- ncol(data)-2\n  M_init <- matrix(1,1,p)\n  res <- cobyla(M_init, objective, control = list(maxeval = 500), outcome=outcome, treatment=treatment, data=data, K=K)\n  M_opt <- res$par\n  return(M_opt)\n}\n\nM <- fit(\"outcome\",\"treated\", Example_training, 10)\n",
    "created" : 1586091930016.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1735004247",
    "id" : "25FC8487",
    "lastKnownWriteTime" : 1586542122,
    "last_content_update" : 1586542122977,
    "path" : "~/Desktop/Harsh/RMALTS/R/malts.R",
    "project_path" : "R/malts.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}